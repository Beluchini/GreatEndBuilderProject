@page "/BasketP"
@using BuildShop.Database
@using BuildShop.Model
@inject BuildContext ef
@inject NavigationManager nm
@rendermode InteractiveServer
<h1>В разработке...</h1>
<a style="color: black; text-decoration: none" href="https://localhost:7283/">
    <h3>Вернуться в каталог</h3>
</a>
Короче я пытался, может потом до ума доведу

<!--<div>
    @foreach (var item in ef.Products.ToList())
    {
    <EditForm FormName="formAddItem" Model="_basket" OnValidSubmit="@Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div>@item.Style</div>
        <div>@item.Title</div>
        <div>@item.Kind</div>
        <div>@item.Price</div>
        <div>@item.Count</div>
        <button type="submit">Добавить в корзину</button>
    </EditForm>
    }
</div>
<EditForm FormName="formAddItem" Model="_basket" OnValidSubmit="@Save">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    @foreach (var item in ef.Baskets)
    {
    <p>@item.BasketStyle</p>
    <p>@item.BasketTittle</p>
    <p>@item.BasketKind</p>
    <p>@item.BasketPrice</p>
    <p>@item.BasketCount</p>
    <button type="submit">Сохранить</button>
    }
</EditForm>-->
@foreach (var item in ef.Baskets)
{
    <div class="DP2">
        <div class="BasketTable">
            <div class="parent">
                <div>
                    <img class="BasketImage" src="@item.BasketStyle"/>
                </div>
                <div>
                    <p>@item.BasketTittle</p>
                    <p>@item.BasketKind</p>
                    <p>@item.BasketPrice</p>
                    <p>@item.BasketCount</p>
                </div>
            </div>
            <button onclick="@(() => DeleteBasket(item))">Удалить</button>
        </div>
    </div>
}
@code {
    private Basket _basket = new Basket();
    private bool ShowModal { get; set; }

    private void Submit(EditContext arg)
    {
        ef.Add(_basket);
        ef.SaveChanges();
        _basket = new Basket();
    }

    private async Task Addmit(EditContext arg)
    {

    }

    private void DeleteBasket(Basket basket)
    {
        ef.Baskets.Remove(basket);
        ef.SaveChanges();

        nm.NavigateTo("BasketP", true);
    }

    /* private void ViewModal()
    {
        ShowModal = true;
    }

    private void CloseModal()
    {
        ShowModal = false;
    }

    private async Task Save()
    {
        ef.Update(_basket);
        await ef.SaveChangesAsync();
    }
    
    private async Task DeleteFromBasket()
    {
        ef.Remove(_basket);
        await ef.SaveChangesAsync();
        await InvokeAsync(StateHasChanged);
    } */
}
